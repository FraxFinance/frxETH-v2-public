// SPDX-License-Identifier: ISC
pragma solidity ^0.8.23;

// **NOTE** Generated code, do not modify.  Run 'npm run generate:constants'.

import { TestBase } from "forge-std/Test.sol";

library Holesky {
    address internal constant BEACON_OPERATOR_ADDRESS = 0x87ccBE1930CA2543bf476b0294eD7Dd0841ba48c;
    address internal constant CURVEAMO_OPERATOR_ADDRESS = 0x625e700125FF054f75e5348497cBFab1ee4b7A40;
    address internal constant ETH2_DEPOSIT_ADDRESS = 0x4242424242424242424242424242424242424242;
    address internal constant FRX_ETH_COMPTROLLER_ADDRESS = 0x625e700125FF054f75e5348497cBFab1ee4b7A40;
    address internal constant FRX_ETH_ERC20_ADDRESS = 0x17845EA6a9BfD2caF1b9E558948BB4999dF2656e;
    address internal constant SFRX_ETH_ERC20_ADDRESS = 0xa63f56985F9C7F3bc9fFc5685535649e0C1a55f3;
    address internal constant RQ_OPERATOR_ADDRESS = 0x625e700125FF054f75e5348497cBFab1ee4b7A40;
    address internal constant TIMELOCK_ADDRESS = 0x625e700125FF054f75e5348497cBFab1ee4b7A40;
    address internal constant TIMELOCK_ADDRESS_REAL = 0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA;
}

library Mainnet {
    address internal constant BEACON_OPERATOR_ADDRESS = 0x9f88Ab08d66a2E9BEF67FA79043F31b06d365D82;
    address internal constant CRV_ERC20 = 0xD533a949740bb3306d119CC777fa900bA034cd52;
    address internal constant CVX_ERC20 = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;
    address internal constant CURVEAMO_OPERATOR_ADDRESS = 0x8306300ffd616049FD7e4b0354a64Da835c1A81C;
    address internal constant ETH2_DEPOSIT_ADDRESS = 0x00000000219ab540356cBB839Cbe05303d7705Fa;
    address internal constant CONVEX_REGULAR_BOOSTER = 0xF403C135812408BFbE8713b5A23a04b3D48AAE31;
    address internal constant CONVEX_FXS_BOOSTER = 0xD8Bd5Cdd145ed2197CB16ddB172DF954e3F28659;
    address internal constant CONVEX_FXS_BOOSTER_OLD = 0x2B8b301B90Eb8801f1eEFe73285Eec117D2fFC95;
    address internal constant CONVEX_CLAIM_ZAP = 0x4890970BB23FCdF624A0557845A29366033e6Fa2;
    address internal constant CURVE_VOTER_PROXY = 0x989AEb4d175e16225E39E87d0D97A3360524AD80;
    address internal constant DEPOSIT_CONTRACT_ADDRESS = 0x00000000219ab540356cBB839Cbe05303d7705Fa;
    address internal constant FRAX_WHALE = 0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27;
    address internal constant FRX_ETH_COMPTROLLER_ADDRESS = 0x8306300ffd616049FD7e4b0354a64Da835c1A81C;
    address internal constant FRX_ETH_ERC20_ADDRESS = 0x5E8422345238F34275888049021821E8E08CAa1f;
    address internal constant SFRX_ETH_ERC20_ADDRESS = 0xac3E018457B222d93114458476f3E3416Abbe38F;
    address internal constant FRX_ETH_ETH_LP = 0xf43211935C781D5ca1a41d2041F397B8A7366C7A;
    address internal constant FRX_ETH_ETH_GAUGE_ERC20 = 0x2932a86df44Fe8D2A706d8e9c5d51c24883423F5;
    address internal constant FRX_ETH_WETH_LP = 0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc;
    address internal constant FRX_ETH_WETH_POOL = 0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc;
    address internal constant FRX_ETH_WETH_GAUGE_DEPOSIT = 0x4E21418095d32d15c6e2B96A9910772613A50d50;
    address internal constant STETH_ETH_OLD_LP = 0xDC24316b9AE028F1497c275EB9192a3Ea0f67022;
    address internal constant STETH_ETH_NG_LP = 0x21E27a5E5513D6e65C4f830167390997aA84843a;
    address internal constant FRAX_GAUGE_CONTROLLER_V2 = 0x3669C421b77340B2979d1A00a792CC2ee0FcE737;
    address internal constant CVXFRX_ETH_WETH_LP = 0xAA71e0065A29F2529aBC0F615874009287966229;
    address internal constant STKCVXFRX_ETH_WETH_LP = 0x08061feC3FC09Aa2Eb4B4B72EA618034CBFD22b0;
    address internal constant CVXFRX_ETH_WETH_BASEREWARDPOOL = 0xFafDE12dC476C4913e29F47B4747860C148c5E4f;
    address internal constant CVXFRX_ETH_ETH_LP = 0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E;
    address internal constant STKCVXFRX_ETH_ETH_LP = 0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0;
    address internal constant RQ_OPERATOR_ADDRESS = 0x8306300ffd616049FD7e4b0354a64Da835c1A81C;
    address internal constant FRX_ETH_ETH_CURVE_POOL_NOT_LP_ADDRESS = 0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577;
    address internal constant TIMELOCK_ADDRESS = 0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA;
    address internal constant TIMELOCK_ADDRESS_REAL = 0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA;
    address internal constant VALIDATOR_OPERATOR = 0x28Ff0220384260089E669fbc46E8528e92F8D190;
    address internal constant VEFXS = 0xc8418aF6358FFddA74e09Ca9CC3Fe03Ca6aDC5b0;
}

library MainnetFEV2Live {
    address internal constant BEACON_ORACLE = 0xA2901F3EE8f4E9F5baC5379BC0CD1F8341280AB5;
    address internal constant CURVE_LSD_AMO = 0xEcb9bBb97BD3C23e8f176075EDB3c68B9a1869Ae;
    address internal constant CURVE_LSD_AMO_HELPER = 0x823F92b5fF0062EDc20F0545ec88f2f3c273cCbd;
    address internal constant ETHER_ROUTER = 0x5acAf61d339dd123e60ba450Ea38fbC49445007C;
    address internal constant FRAX_ETHER_MINTER = 0x7Bc6bad540453360F744666D625fec0ee1320cA3;
    address internal constant LENDING_POOL = 0x24A1d1671a3Bd1C3cABb9B10724a4127d84e1Da0;
    address internal constant REDEMPTION_QUEUE = 0xfDC69e6BE352BD5644C438302DE4E311AAD5565b;
    address internal constant VARIABLE_INTEREST_RATE = 0x2fA48925696EbBF1F4Fc08228dA06021f1806544;
    address internal constant VALIDATOR_POOL_IC = 0x1ee9ca049EFc314f4E17c58b97715E41c5a09C16;
}

abstract contract Helper is TestBase {
    constructor() {
        labelConstants();
    }

    function labelConstants() public {
        vm.label(0xD533a949740bb3306d119CC777fa900bA034cd52, "<CRV_ERC20>");
        vm.label(0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B, "<CVX_ERC20>");
        vm.label(0xFafDE12dC476C4913e29F47B4747860C148c5E4f, "<CVXFRX_ETH_WETH_BASEREWARDPOOL>");
        vm.label(0xAA71e0065A29F2529aBC0F615874009287966229, "<CVXFRX_ETH_WETH_LP>");
        vm.label(0x8D8Cb63BcB8AD89Aa750B9f80Aa8Fa4CfBcC8E0C, "<CURVEAMO_OPERATOR_ADDRESS>");
        vm.label(0xF403C135812408BFbE8713b5A23a04b3D48AAE31, "<CONVEX_REGULAR_BOOSTER>");
        vm.label(0xD8Bd5Cdd145ed2197CB16ddB172DF954e3F28659, "<CONVEX_FXS_BOOSTER>");
        vm.label(0x2B8b301B90Eb8801f1eEFe73285Eec117D2fFC95, "<CONVEX_FXS_BOOSTER_OLD>");
        vm.label(0x4890970BB23FCdF624A0557845A29366033e6Fa2, "<CONVEX_CLAIM_ZAP>");
        vm.label(0x989AEb4d175e16225E39E87d0D97A3360524AD80, "<CURVE_VOTER_PROXY>");
        vm.label(0x00000000219ab540356cBB839Cbe05303d7705Fa, "<DEPOSIT_CONTRACT_ADDRESS>");
        vm.label(0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27, "<FRAX_WHALE>");
        vm.label(0x8306300ffd616049FD7e4b0354a64Da835c1A81C, "<FRX_ETH_COMPTROLLER_ADDRESS>");
        vm.label(0x5E8422345238F34275888049021821E8E08CAa1f, "<FRX_ETH_ERC20_ADDRESS>");
        vm.label(0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc, "<FRX_ETH_WETH_LP>");
        vm.label(0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc, "<FRX_ETH_WETH_POOL>");
        vm.label(0x4E21418095d32d15c6e2B96A9910772613A50d50, "<FRX_ETH_WETH_GAUGE_DEPOSIT>");
        vm.label(0xDC24316b9AE028F1497c275EB9192a3Ea0f67022, "<STETH_ETH_OLD_LP>");
        vm.label(0x21E27a5E5513D6e65C4f830167390997aA84843a, "<STETH_ETH_NG_LP>");
        vm.label(0x3669C421b77340B2979d1A00a792CC2ee0FcE737, "<FRAX_GAUGE_CONTROLLER_V2>");
        vm.label(0xac3E018457B222d93114458476f3E3416Abbe38F, "<SFRX_ETH_ERC20_ADDRESS>");
        vm.label(0x08061feC3FC09Aa2Eb4B4B72EA618034CBFD22b0, "<STKCVXFRX_ETH_WETH_LP>");
        vm.label(0xf43211935C781D5ca1a41d2041F397B8A7366C7A, "<FRX_ETH_ETH_LP>");
        vm.label(0x2932a86df44Fe8D2A706d8e9c5d51c24883423F5, "<FRX_ETH_ETH_GAUGE_ERC20>");
        vm.label(0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E, "<CVXFRX_ETH_ETH_LP>");
        vm.label(0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0, "<STKCVXFRX_ETH_ETH_LP>");
        vm.label(0x5180db0237291A6449DdA9ed33aD90a38787621c, "<INVESTOR_CUSTODIAN>");
        vm.label(0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577, "<FRX_ETH_ETH_CURVE_POOL_NOT_LP_ADDRESS>");
        vm.label(0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA, "<TIMELOCK_ADDRESS>");
        vm.label(0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA, "<TIMELOCK_ADDRESS_REAL>");
        vm.label(0x28Ff0220384260089E669fbc46E8528e92F8D190, "<VALIDATOR_OPERATOR>");
        vm.label(0xc8418aF6358FFddA74e09Ca9CC3Fe03Ca6aDC5b0, "<VEFXS>");
    }
}
